{
  "stats": {
    "suites": 3,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-09T11:13:28.404Z",
    "end": "2022-03-09T11:16:50.329Z",
    "duration": 150058,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "edee2c42-73dd-4b72-accf-b288e32d74d8",
      "title": "",
      "fullFile": "cypress/integration/flights-search.spec.js",
      "file": "cypress/integration/flights-search.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
          "title": "Flights search test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test default selected tab",
              "fullTitle": "Flights search test suite Test default selected tab",
              "timedOut": null,
              "duration": 10453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.lstMenu().filter('.active').should('have.text', 'Flights'); // another way\n// flightSearch.tabFlight().invoke('attr', 'class').should('include', 'active')\n// another way\n// cy.get('.list-one').children().each(e => {\n//     if (e.hasClass('cff-list-tab active')) {\n//         expect(e.text()).to.contain('Flights')\n//     }\n// })",
              "err": {},
              "uuid": "748e272a-00bf-478c-9528-33bcefbe0d43",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test round trip and oneway options",
              "fullTitle": "Flights search test suite Test round trip and oneway options",
              "timedOut": null,
              "duration": 11908,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.rbtnRoundTrip().should('be.checked');\n_flightsSearch.default.rbtnOneWay().should('not.be.checked');\n_flightsSearch.default.lnkAdvSearch().click({\n  force: true\n}); // select one way\n\n_flightsSearch.default.rbtnOneWay().check({\n  force: true\n}).should('be.checked').and('be.enabled');\n_flightsSearch.default.tfReturnDate().should('not.be.visible').and('not.be.enabled');\n_flightsSearch.default.tfReturnFromCity().should('not.be.visible').and('be.enabled');\n_flightsSearch.default.tfReturnToCity().should('not.be.visible').and('be.enabled'); // select round trip\n\n_flightsSearch.default.rbtnRoundTrip().check({\n  force: true\n}).should('be.checked').and('be.enabled');\n_flightsSearch.default.tfReturnDate().should('be.visible').and('be.enabled');\n_flightsSearch.default.tfReturnFromCity().invoke('removeAttr', 'type').should('be.visible').and('be.enabled');\n_flightsSearch.default.tfReturnToCity().invoke('removeAttr', 'type').should('be.visible').and('be.enabled');",
              "err": {},
              "uuid": "69580f55-2898-4e80-adc8-5720f36b4c8b",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test unaccompanied minor",
              "fullTitle": "Flights search test suite Test unaccompanied minor",
              "timedOut": null,
              "duration": 10864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.txtInfo().should('not.exist');\n_flightsSearch.default.lnkInfo().should('be.visible').click({\n  force: true\n});\n_flightsSearch.default.txtInfo().should('exist').and('contain', _flight.default.info).find('button').click();\n_flightsSearch.default.txtInfo().should('not.exist');",
              "err": {},
              "uuid": "979f374d-b908-43a1-9e2c-163bcd57c085",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select passengers",
              "fullTitle": "Flights search test suite Test select passengers",
              "timedOut": null,
              "duration": 11988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.SelectPerson(_flight.default.person);",
              "err": {},
              "uuid": "23cae111-bf6a-48c3-82f4-2f927cbe229c",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test origin field",
              "fullTitle": "Flights search test suite Test origin field",
              "timedOut": null,
              "duration": 8587,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.tfFromCity().invoke('attr', 'placeholder', 'From City').should('have.attr', 'placeholder', 'From City').type(_flight.default.origin);\n_flightsSearch.default.menuAutoSuggest().each(e => expect(e.text()).to.contain(_flight.default.origin)).first().as('firstRow').type('{enter}');\n_flightsSearch.default.tfFromCity().invoke('val').then(v => {\n  cy.get('@firstRow').should('contain', v);\n});",
              "err": {},
              "uuid": "8ccdfbe8-839e-489e-900b-1835f2dd8c8d",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select airlines",
              "fullTitle": "Flights search test suite Test select airlines",
              "timedOut": null,
              "duration": 20838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.lnkAdvSearch().click({\n  force: true\n});\n_flightsSearch.default.ddlSelectAirline().find('option').invoke('text').as('allOptions');\n_flightsSearch.default.ddlSelectAirline().select(_flight.default.airlines).find('option:selected').invoke('text').then(t => t.trim()).should('eq', _flight.default.airlines); // .then(t => expect(t.trim()).to.eq(data.airlines)) // another way\n\n_flightsSearch.default.ddlSelectAirline().children().invoke('text').then(act => {\n  cy.get('@allOptions').then(exp => expect(act).to.equal(exp));\n});",
              "err": {},
              "uuid": "6c24cc22-e85c-4721-ab16-322d9f08a29c",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test empty text fields",
              "fullTitle": "Flights search test suite Test empty text fields",
              "timedOut": null,
              "duration": 7525,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.btnSearch().click();\n_flightsSearch.default.tfFromCity().should('have.css', 'border', '2px solid rgb(255, 0, 0)');\n_flightsSearch.default.tfToCity().should('have.css', 'border', '2px solid rgb(255, 0, 0)');",
              "err": {},
              "uuid": "9f09ed6e-10c1-4c03-acfc-57ec4e6b8aa1",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "748e272a-00bf-478c-9528-33bcefbe0d43",
            "69580f55-2898-4e80-adc8-5720f36b4c8b",
            "979f374d-b908-43a1-9e2c-163bcd57c085",
            "23cae111-bf6a-48c3-82f4-2f927cbe229c",
            "8ccdfbe8-839e-489e-900b-1835f2dd8c8d",
            "6c24cc22-e85c-4721-ab16-322d9f08a29c",
            "9f09ed6e-10c1-4c03-acfc-57ec4e6b8aa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e2769b10-f2f2-4db0-b9b0-8b1ee3661712",
      "title": "",
      "fullFile": "cypress/integration/hotels-search.spec.js",
      "file": "cypress/integration/hotels-search.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49e29a87-3495-4734-8a88-fccf03e4a5c5",
          "title": "Hotels search test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test \"Your Destination\" auto-suggest",
              "fullTitle": "Hotels search test suite Test \"Your Destination\" auto-suggest",
              "timedOut": null,
              "duration": 8698,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_hotelSearch.default.tfStayCity().type(_hotel.default.city);\ncy.document().then(d => {\n  d.querySelectorAll(_hotelSearch.default.lstCities()).forEach(e => expect(e.childNodes.item(1).nodeValue).to.contain(_hotel.default.city));\n});",
              "err": {},
              "uuid": "a387af70-804c-49b5-8e67-f6408bc1c1fa",
              "parentUUID": "49e29a87-3495-4734-8a88-fccf03e4a5c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test default calendar values",
              "fullTitle": "Hotels search test suite Test default calendar values",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dt = {\n  depart: null,\n  return: null\n};\n_hotelSearch.default.tfDepartDate().invoke('val').then(d => dt.depart = Date.parse(d));\n_hotelSearch.default.tfReturnDate().invoke('val').then(d => dt.return = Date.parse(d));\n_hotelSearch.default.elStartDate().then(e => {\n  cy.wrap(e).find('a').should('have.css', 'background-color', 'rgb(0, 93, 186)').invoke('text').then(day => Date.parse(`${e.attr('data-year')}-${Number(e.attr('data-month')) + 1}-${day}`)).should('eq', dt.depart);\n});\n_hotelSearch.default.elEndDate().then(e => {\n  cy.wrap(e).find('a').should('have.css', 'background-color', 'rgb(0, 93, 186)').invoke('text').then(day => Date.parse(`${e.attr('data-year')}-${Number(e.attr('data-month')) + 1}-${day}`)).should('eq', dt.return);\n});\n_hotelSearch.default.elBetweenDate().each(e => {\n  cy.wrap(e).find('a').should('have.css', 'background-color', 'rgba(0, 0, 0, 0)').invoke('text').then(day => Date.parse(`${e.attr('data-year')}-${Number(e.attr('data-month')) + 1}-${day}`)).should('be.above', dt.depart).and('be.below', dt.return);\n});",
              "err": {},
              "uuid": "a9d0cd7f-21c2-4442-a6ce-485818207934",
              "parentUUID": "49e29a87-3495-4734-8a88-fccf03e4a5c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test add and remove room",
              "fullTitle": "Hotels search test suite Test add and remove room",
              "timedOut": null,
              "duration": 1016,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_hotelSearch.default.tfGuestForm().should('have.prop', 'placeholder', '1 Room, 2 Adults, 0 Child').click(); // add room\n\nCypress._.times(4, () => _hotelSearch.default.btnAddRoom().click({\n  force: true\n})); // method 1\n// const arrAdults = []\n// const arrChild = []\n// cy.get(\"[title='Select Adults'] option:selected\").each(e => arrAdults.push(Number(e.text())))\n// cy.wrap(arrAdults).then(v => v.reduce((acc, a) => acc + a), 0).as('totalAdults')\n// cy.get(\"[title='Select Child'] option:selected\").each(e => arrChild.push(Number(e.text())))\n// cy.wrap(arrChild).then(v => lodash.sum(v)).as('totalChildren')\n// method 2\n\n_hotelSearch.default.ddlSelectAdults().find(':selected').then(e => Cypress._.map(e.text(), Number)).then(n => Cypress._.sum(n)).as('totalAdults');\n_hotelSearch.default.ddlSelectChild().find(':selected').then(e => Cypress._.map(e.text(), Number)).then(n => Cypress._.sum(n)).as('totalChildren');\ncy.get('@totalAdults').then(ta => {\n  cy.get('@totalChildren').then(tc => {\n    _hotelSearch.default.tfGuestForm().should('have.value', `5 Rooms,${ta} Adults,${tc} Child`);\n  });\n}); // delete room\nCypress._.times(4, () => _hotelSearch.default.btnRemoveRoom().click({\n  force: true\n}));\n_hotelSearch.default.ddlSelectAdults().find(':selected').then(e => Cypress._.map(e.text(), Number)).then(n => Cypress._.sum(n)).as('totalAdults');\n_hotelSearch.default.ddlSelectChild().find(':selected').then(e => Cypress._.map(e.text(), Number)).then(n => Cypress._.sum(n)).as('totalChildren');\ncy.get('@totalAdults').then(ta => {\n  cy.get('@totalChildren').then(tc => {\n    _hotelSearch.default.tfGuestForm().should('have.value', `1 Room,${ta} Adults,${tc} Child`);\n  });\n});",
              "err": {},
              "uuid": "f5631c1d-9d60-427a-a431-ee481de76a8b",
              "parentUUID": "49e29a87-3495-4734-8a88-fccf03e4a5c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select guest",
              "fullTitle": "Hotels search test suite Test select guest",
              "timedOut": null,
              "duration": 3789,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_hotelSearch.default.tfGuestForm().should('have.prop', 'placeholder', '1 Room, 2 Adults, 0 Child').click();\ncy.setGuest(_hotel.default.id, _hotel.default.room, _hotel.default.adult, _hotel.default.child);",
              "err": {},
              "uuid": "8e101b30-dfb4-4579-b032-b9fc9b708714",
              "parentUUID": "49e29a87-3495-4734-8a88-fccf03e4a5c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select star rating",
              "fullTitle": "Hotels search test suite Test select star rating",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_hotelSearch.default.lnkAdvOption().click({\n  force: true\n});\n_hotelSearch.default.ddlStarRating().find('option:selected').should('contain.text', 'Star Rating');\n_hotelSearch.default.ddlStarRating().select('Five Star').find('option:selected').invoke('text').then(t => expect(t.trim()).to.eq('Five Star'));",
              "err": {},
              "uuid": "4e6ae5eb-3e55-4f38-9e3c-a1e23923ef7d",
              "parentUUID": "49e29a87-3495-4734-8a88-fccf03e4a5c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a387af70-804c-49b5-8e67-f6408bc1c1fa",
            "a9d0cd7f-21c2-4442-a6ce-485818207934",
            "f5631c1d-9d60-427a-a431-ee481de76a8b",
            "8e101b30-dfb4-4579-b032-b9fc9b708714",
            "4e6ae5eb-3e55-4f38-9e3c-a1e23923ef7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14782,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3e4faa65-4899-4725-91b0-ab84058c5a66",
      "title": "",
      "fullFile": "cypress/integration/car-search.spec.js",
      "file": "cypress/integration/car-search.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1b281677-f756-4c36-9707-b2f634aa6c70",
          "title": "Car search test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test default selected arrival and departure time",
              "fullTitle": "Car search test suite Test default selected arrival and departure time",
              "timedOut": null,
              "duration": 12137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_carSearch.default.ddlPickTime().find('option:selected').invoke('val').should('eq', '10:00');\n_carSearch.default.ddlDropTime().find('option:selected').invoke('val').should('eq', '10:00');",
              "err": {},
              "uuid": "afac9907-a226-44c1-ae3e-17653faff89b",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select driver age",
              "fullTitle": "Car search test suite Test select driver age",
              "timedOut": null,
              "duration": 9210,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_carSearch.default.tabCar().click();\n_carSearch.default.ddlDriverAge().as('driverAge').find('option:selected').should('have.text', 'Between 30 - 65?');\n_carSearch.default.ddlDriverAge().select('Below 30').find(':selected').should('have.text', 'Below 30');\n_carSearch.default.txtTooltip() // .as('tooltip')\n.should('have.text', 'Additional Fee may apply for driver under 30 Yrs or above 65 Yrs old, at the time of rental. Please check term and conditions on payment page.').and('not.be.visible').parent().invoke('css', 'display', 'inherit') // .invoke('attr', 'style', 'display:inherit')\n.children('p') // .get('@tooltip')\n.should('be.visible');",
              "err": {},
              "uuid": "faa18073-3178-4338-8650-a90decbb47ee",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test get vendor type",
              "fullTitle": "Car search test suite Test get vendor type",
              "timedOut": null,
              "duration": 8612,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const objData = {};\nobjData['vendorCode'] = [];\n_carSearch.default.tabCar().click();\n_carSearch.default.lnkAdvOption().click({\n  force: true\n});\n_carSearch.default.ddlVendorCode().find(':selected').should('have.text', 'Car Company');\n_carSearch.default.ddlVendorCode().find('option').should('have.length.gt', 0).each(e => objData['vendorCode'].push(e.text()));\ncy.writeFile('data.json', objData);",
              "err": {},
              "uuid": "cad528aa-df79-41ab-a9f2-cfb45837c102",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test get vehicle type",
              "fullTitle": "Car search test suite Test get vehicle type",
              "timedOut": null,
              "duration": 8873,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const objData = {};\nobjData['vehicleType'] = [];\n_carSearch.default.tabCar().click();\n_carSearch.default.lnkAdvOption().click({\n  force: true\n});\n_carSearch.default.ddlVehicleType().find(':selected').should('have.text', 'Car Type');\n_carSearch.default.ddlVehicleType().find('option').should('have.length.gt', 0).each(e => objData['vehicleType'].push(e.text()));\ncy.writeFile('data.json', objData);",
              "err": {},
              "uuid": "de78688e-3ddb-45c5-af9e-2fef9016476f",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test vendor code options",
              "fullTitle": "Car search test suite Test vendor code options",
              "timedOut": null,
              "duration": 6781,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrRes = [];\n_carSearch.default.ddlVendorCode().find('option').each(e => arrRes.push(e.text()));\ncy.wrap(arrRes).should('deep.equal', _car.default.vendorCode);",
              "err": {},
              "uuid": "f9bc4a25-309e-42ff-b977-df24caceea8b",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test vehicle type options",
              "fullTitle": "Car search test suite Test vehicle type options",
              "timedOut": null,
              "duration": 7500,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrRes = [];\n_carSearch.default.ddlVehicleType().find('option').each(e => cy.wrap(e).invoke('text').then(t => arrRes.push(t)));\ncy.wrap(arrRes).should('deep.equal', _car.default.vehicleType);",
              "err": {},
              "uuid": "96517a87-fcc2-4ec8-b77d-cf8c35470ea2",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afac9907-a226-44c1-ae3e-17653faff89b",
            "faa18073-3178-4338-8650-a90decbb47ee",
            "cad528aa-df79-41ab-a9f2-cfb45837c102",
            "de78688e-3ddb-45c5-af9e-2fef9016476f",
            "f9bc4a25-309e-42ff-b977-df24caceea8b",
            "96517a87-fcc2-4ec8-b77d-cf8c35470ea2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}