{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-09T11:14:43.400Z",
    "end": "2022-03-09T11:16:06.084Z",
    "duration": 82684,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "edee2c42-73dd-4b72-accf-b288e32d74d8",
      "title": "",
      "fullFile": "cypress/integration/flights-search.spec.js",
      "file": "cypress/integration/flights-search.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
          "title": "Flights search test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test default selected tab",
              "fullTitle": "Flights search test suite Test default selected tab",
              "timedOut": null,
              "duration": 10453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.lstMenu().filter('.active').should('have.text', 'Flights'); // another way\n// flightSearch.tabFlight().invoke('attr', 'class').should('include', 'active')\n// another way\n// cy.get('.list-one').children().each(e => {\n//     if (e.hasClass('cff-list-tab active')) {\n//         expect(e.text()).to.contain('Flights')\n//     }\n// })",
              "err": {},
              "uuid": "748e272a-00bf-478c-9528-33bcefbe0d43",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test round trip and oneway options",
              "fullTitle": "Flights search test suite Test round trip and oneway options",
              "timedOut": null,
              "duration": 11908,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.rbtnRoundTrip().should('be.checked');\n_flightsSearch.default.rbtnOneWay().should('not.be.checked');\n_flightsSearch.default.lnkAdvSearch().click({\n  force: true\n}); // select one way\n\n_flightsSearch.default.rbtnOneWay().check({\n  force: true\n}).should('be.checked').and('be.enabled');\n_flightsSearch.default.tfReturnDate().should('not.be.visible').and('not.be.enabled');\n_flightsSearch.default.tfReturnFromCity().should('not.be.visible').and('be.enabled');\n_flightsSearch.default.tfReturnToCity().should('not.be.visible').and('be.enabled'); // select round trip\n\n_flightsSearch.default.rbtnRoundTrip().check({\n  force: true\n}).should('be.checked').and('be.enabled');\n_flightsSearch.default.tfReturnDate().should('be.visible').and('be.enabled');\n_flightsSearch.default.tfReturnFromCity().invoke('removeAttr', 'type').should('be.visible').and('be.enabled');\n_flightsSearch.default.tfReturnToCity().invoke('removeAttr', 'type').should('be.visible').and('be.enabled');",
              "err": {},
              "uuid": "69580f55-2898-4e80-adc8-5720f36b4c8b",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test unaccompanied minor",
              "fullTitle": "Flights search test suite Test unaccompanied minor",
              "timedOut": null,
              "duration": 10864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.txtInfo().should('not.exist');\n_flightsSearch.default.lnkInfo().should('be.visible').click({\n  force: true\n});\n_flightsSearch.default.txtInfo().should('exist').and('contain', _flight.default.info).find('button').click();\n_flightsSearch.default.txtInfo().should('not.exist');",
              "err": {},
              "uuid": "979f374d-b908-43a1-9e2c-163bcd57c085",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select passengers",
              "fullTitle": "Flights search test suite Test select passengers",
              "timedOut": null,
              "duration": 11988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.SelectPerson(_flight.default.person);",
              "err": {},
              "uuid": "23cae111-bf6a-48c3-82f4-2f927cbe229c",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test origin field",
              "fullTitle": "Flights search test suite Test origin field",
              "timedOut": null,
              "duration": 8587,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.tfFromCity().invoke('attr', 'placeholder', 'From City').should('have.attr', 'placeholder', 'From City').type(_flight.default.origin);\n_flightsSearch.default.menuAutoSuggest().each(e => expect(e.text()).to.contain(_flight.default.origin)).first().as('firstRow').type('{enter}');\n_flightsSearch.default.tfFromCity().invoke('val').then(v => {\n  cy.get('@firstRow').should('contain', v);\n});",
              "err": {},
              "uuid": "8ccdfbe8-839e-489e-900b-1835f2dd8c8d",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select airlines",
              "fullTitle": "Flights search test suite Test select airlines",
              "timedOut": null,
              "duration": 20838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.lnkAdvSearch().click({\n  force: true\n});\n_flightsSearch.default.ddlSelectAirline().find('option').invoke('text').as('allOptions');\n_flightsSearch.default.ddlSelectAirline().select(_flight.default.airlines).find('option:selected').invoke('text').then(t => t.trim()).should('eq', _flight.default.airlines); // .then(t => expect(t.trim()).to.eq(data.airlines)) // another way\n\n_flightsSearch.default.ddlSelectAirline().children().invoke('text').then(act => {\n  cy.get('@allOptions').then(exp => expect(act).to.equal(exp));\n});",
              "err": {},
              "uuid": "6c24cc22-e85c-4721-ab16-322d9f08a29c",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test empty text fields",
              "fullTitle": "Flights search test suite Test empty text fields",
              "timedOut": null,
              "duration": 7525,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_flightsSearch.default.btnSearch().click();\n_flightsSearch.default.tfFromCity().should('have.css', 'border', '2px solid rgb(255, 0, 0)');\n_flightsSearch.default.tfToCity().should('have.css', 'border', '2px solid rgb(255, 0, 0)');",
              "err": {},
              "uuid": "9f09ed6e-10c1-4c03-acfc-57ec4e6b8aa1",
              "parentUUID": "d2d2924f-8b7c-4342-8b7b-0fd066085326",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "748e272a-00bf-478c-9528-33bcefbe0d43",
            "69580f55-2898-4e80-adc8-5720f36b4c8b",
            "979f374d-b908-43a1-9e2c-163bcd57c085",
            "23cae111-bf6a-48c3-82f4-2f927cbe229c",
            "8ccdfbe8-839e-489e-900b-1835f2dd8c8d",
            "6c24cc22-e85c-4721-ab16-322d9f08a29c",
            "9f09ed6e-10c1-4c03-acfc-57ec4e6b8aa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}