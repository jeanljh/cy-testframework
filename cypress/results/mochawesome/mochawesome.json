{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-09T11:13:28.404Z",
    "end": "2022-03-09T11:14:22.131Z",
    "duration": 53727,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e4faa65-4899-4725-91b0-ab84058c5a66",
      "title": "",
      "fullFile": "cypress/integration/car-search.spec.js",
      "file": "cypress/integration/car-search.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1b281677-f756-4c36-9707-b2f634aa6c70",
          "title": "Car search test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test default selected arrival and departure time",
              "fullTitle": "Car search test suite Test default selected arrival and departure time",
              "timedOut": null,
              "duration": 12137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_carSearch.default.ddlPickTime().find('option:selected').invoke('val').should('eq', '10:00');\n_carSearch.default.ddlDropTime().find('option:selected').invoke('val').should('eq', '10:00');",
              "err": {},
              "uuid": "afac9907-a226-44c1-ae3e-17653faff89b",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test select driver age",
              "fullTitle": "Car search test suite Test select driver age",
              "timedOut": null,
              "duration": 9210,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_carSearch.default.tabCar().click();\n_carSearch.default.ddlDriverAge().as('driverAge').find('option:selected').should('have.text', 'Between 30 - 65?');\n_carSearch.default.ddlDriverAge().select('Below 30').find(':selected').should('have.text', 'Below 30');\n_carSearch.default.txtTooltip() // .as('tooltip')\n.should('have.text', 'Additional Fee may apply for driver under 30 Yrs or above 65 Yrs old, at the time of rental. Please check term and conditions on payment page.').and('not.be.visible').parent().invoke('css', 'display', 'inherit') // .invoke('attr', 'style', 'display:inherit')\n.children('p') // .get('@tooltip')\n.should('be.visible');",
              "err": {},
              "uuid": "faa18073-3178-4338-8650-a90decbb47ee",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test get vendor type",
              "fullTitle": "Car search test suite Test get vendor type",
              "timedOut": null,
              "duration": 8612,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const objData = {};\nobjData['vendorCode'] = [];\n_carSearch.default.tabCar().click();\n_carSearch.default.lnkAdvOption().click({\n  force: true\n});\n_carSearch.default.ddlVendorCode().find(':selected').should('have.text', 'Car Company');\n_carSearch.default.ddlVendorCode().find('option').should('have.length.gt', 0).each(e => objData['vendorCode'].push(e.text()));\ncy.writeFile('data.json', objData);",
              "err": {},
              "uuid": "cad528aa-df79-41ab-a9f2-cfb45837c102",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test get vehicle type",
              "fullTitle": "Car search test suite Test get vehicle type",
              "timedOut": null,
              "duration": 8873,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const objData = {};\nobjData['vehicleType'] = [];\n_carSearch.default.tabCar().click();\n_carSearch.default.lnkAdvOption().click({\n  force: true\n});\n_carSearch.default.ddlVehicleType().find(':selected').should('have.text', 'Car Type');\n_carSearch.default.ddlVehicleType().find('option').should('have.length.gt', 0).each(e => objData['vehicleType'].push(e.text()));\ncy.writeFile('data.json', objData);",
              "err": {},
              "uuid": "de78688e-3ddb-45c5-af9e-2fef9016476f",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test vendor code options",
              "fullTitle": "Car search test suite Test vendor code options",
              "timedOut": null,
              "duration": 6781,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrRes = [];\n_carSearch.default.ddlVendorCode().find('option').each(e => arrRes.push(e.text()));\ncy.wrap(arrRes).should('deep.equal', _car.default.vendorCode);",
              "err": {},
              "uuid": "f9bc4a25-309e-42ff-b977-df24caceea8b",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test vehicle type options",
              "fullTitle": "Car search test suite Test vehicle type options",
              "timedOut": null,
              "duration": 7500,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrRes = [];\n_carSearch.default.ddlVehicleType().find('option').each(e => cy.wrap(e).invoke('text').then(t => arrRes.push(t)));\ncy.wrap(arrRes).should('deep.equal', _car.default.vehicleType);",
              "err": {},
              "uuid": "96517a87-fcc2-4ec8-b77d-cf8c35470ea2",
              "parentUUID": "1b281677-f756-4c36-9707-b2f634aa6c70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afac9907-a226-44c1-ae3e-17653faff89b",
            "faa18073-3178-4338-8650-a90decbb47ee",
            "cad528aa-df79-41ab-a9f2-cfb45837c102",
            "de78688e-3ddb-45c5-af9e-2fef9016476f",
            "f9bc4a25-309e-42ff-b977-df24caceea8b",
            "96517a87-fcc2-4ec8-b77d-cf8c35470ea2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}